name: CI
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    # let's make sure our tests pass on Chrome browser
    name: E2E on Chrome
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        uses: cypress-io/github-action@v4
        with:
          # just perform install
          runTests: false
      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v4
        with:
          # we have already installed all dependencies above
          install: true
          build: npm run build
          start: npm run start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          spec: ../../cypress/e2e/next_js_dev.cy.js
          config-file: ../../cypress.config.js
          working-directory: next/js
          record: true
          parallel: true
          group: 'Actions example'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v4
        with:
          # we have already installed all dependencies above
          install: true
          build: npm run build
          start: npm run start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          spec: ../../cypress/e2e/next_js_prod.cy.js
          config-file: ../../cypress.config.js
          working-directory: next/js
          record: true
          parallel: true
          group: 'Actions example'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'
  #     - name: Install next-js
  #       run: yarn install
  #       working-directory: next/js
  #     - name: Build next-js
  #       run: yarn build
  #       working-directory: next/js
  #     - name: Install next-ts
  #       run: yarn install
  #       working-directory: next/ts
  #     - name: Build next-ts
  #       run: yarn build
  #       working-directory: next/ts
  #     - name: Install parcel-js
  #       run: yarn install
  #       working-directory: parcel/js
  #     - name: Build parcel-js
  #       run: yarn build
  #       working-directory: parcel/js
  #     - name: Install parcel-ts
  #       run: yarn install
  #       working-directory: parcel/ts
  #     - name: Build parcel-ts
  #       run: yarn build
  #       working-directory: parcel/ts
  #     - name: Install vite-js
  #       run: yarn install
  #       working-directory: vite/js
  #     - name: Build vite-js
  #       run: yarn build
  #       working-directory: vite/js
  #     - name: Install vite-ts
  #       run: yarn install
  #       working-directory: vite/ts
  #     - name: Build vite-ts
  #       run: yarn build
  #       working-directory: vite/ts
  #     - name: Install webpack5-js
  #       run: yarn install
  #       working-directory: webpack5/js
  #     - name: Build webpack5-js
  #       run: yarn build
  #       working-directory: webpack5/js
  #     - name: Install webpack5-ts
  #       run: yarn install
  #       working-directory: webpack5/ts
  #     - name: Build webpack5-ts
  #       run: yarn build
  #       working-directory: webpack5/ts
  #     - name: Install webpack4-js
  #       run: yarn install
  #       working-directory: webpack4/js
  #     - name: Build webpack4-js
  #       run: yarn build
  #       working-directory: webpack4/js
  #     - name: Install webpack4-ts
  #       run: yarn install
  #       working-directory: webpack4/ts
  #     - name: Build webpack4-ts
  #       run: yarn build
  #       working-directory: webpack4/ts
  #     - name: Install unpkg-js
  #       run: yarn install
  #       working-directory: unpkg/js
  #     - name: Build unpkg-js
  #       run: yarn build
  #       working-directory: unpkg/js
  #     - name: Install unpkg-ts
  #       run: yarn install
  #       working-directory: unpkg/ts
  #     - name: Build unpkg-ts
  #       run: yarn build
  #       working-directory: unpkg/ts
  #     - name: Install node
  #       run: yarn install
  #       working-directory: node
  #     - name: Build node
  #       run: yarn build && yarn run:js && yarn run:mjs && yarn run:ts && yarn run:ts-node
  #       working-directory: node
